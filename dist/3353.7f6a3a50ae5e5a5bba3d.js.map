{"version":3,"file":"3353.7f6a3a50ae5e5a5bba3d.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/Icon.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ahi3up0oMwlFJTE6hkxG\",\"size-micro\":\"DOhAE8mniLY2g2i7rkfz\",\"sizeMicro\":\"DOhAE8mniLY2g2i7rkfz\",\"size-mini\":\"gF82cRdQRxqmTN8fLb9i\",\"sizeMini\":\"gF82cRdQRxqmTN8fLb9i\",\"size-tiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"sizeTiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"size-small\":\"iaKZOfQnH3hROD8QK_fq\",\"sizeSmall\":\"iaKZOfQnH3hROD8QK_fq\",\"size-small-mobile\":\"YP90v9JGup97HOcD2duf\",\"sizeSmallMobile\":\"YP90v9JGup97HOcD2duf\",\"size-medium\":\"TmYXjEqVbt0gwaoWlRHv\",\"sizeMedium\":\"TmYXjEqVbt0gwaoWlRHv\",\"size-large\":\"YIuShtdEPpbCXrGgmeFv\",\"sizeLarge\":\"YIuShtdEPpbCXrGgmeFv\",\"size-jumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"sizeJumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"avatar\":\"PTpUqAuoZL9Uou6MqJXX\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n    topicLink?: string;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n    };\n  },\n)(ChatExtra));\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverUrl = cover ? `data:${cover.format};base64,${cover.data.toString('base64')}` : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n}) {\n  const { openLimitReachedModal, showAllowedMessageTypesNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    handleSetAttachments([\n      ...attachments,\n      ...await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      ))),\n    ]);\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    handleSetAttachments(await Promise.all(files.map((file) => buildAttachment(file.name, file))));\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n\nfunction getAttachmentType(attachment: ApiAttachment) {\n  if (attachment.shouldSendAsFile) return 'file';\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'image';\n  }\n\n  if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'video';\n  }\n\n  if (SUPPORTED_AUDIO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'audio';\n  }\n\n  return 'file';\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      const shouldSetAttachments = files?.length && !editedMessage && !isWordDocument;\n\n      if (shouldSetAttachments) {\n        const newAttachments = await Promise.all(files!.map((file) => {\n          return buildAttachment(file.name, file);\n        }));\n        setAttachments((attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji, onCustomEmojiStripped,\n    setNextText,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: number } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        text: parseHtmlAsFormattedText(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: number,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      <ResponsiveHoverButton\n        id=\"attach-menu-button\"\n        className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n        round\n        color=\"translucent\"\n        onActivate={handleToggleAttachMenu}\n        ariaLabel=\"Add an attachment\"\n        ariaControls=\"attach-menu-controls\"\n        hasPopup\n      >\n        <i className=\"icon icon-attach\" />\n      </ResponsiveHoverButton>\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {(canSendDocuments || canSendAudios)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {canAttachMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyInfo || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [isShown],\n    isShown ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    canAnimate && isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n  );\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(sender),\n  );\n\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n\n  const leftIcon = useMemo(() => {\n    if (isShowingReply) {\n      return 'reply';\n    }\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\">\n          {leftIcon && <Icon name={leftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <EmbeddedMessage\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? lang('EditMessage')\n            : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n\n    let message: ApiMessage | undefined;\n    if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (editingId && message) {\n      sender = selectSender(global, message);\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiChatMember,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type { IAnchorPosition, InlineBotSettings, ISettings } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { processMessageInputForCustomEmoji } from '../../util/customEmojiManager';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { escapeHtml } from '../middle/composer/helpers/cleanHtml';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: number;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    shouldSchedule?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    groupChatMembers?: ApiChatMember[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    chatBotCommands?: ApiBotCommand[];\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  shouldSchedule,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  groupChatMembers,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  chatBotCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, isChatWithBot, isInStoryViewer),\n    [chat, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (shouldSchedule) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, shouldSchedule,\n  ]);\n  const canShowCustomSendMenu = !shouldSchedule;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    sendMessage({\n      messageList: currentMessageList,\n      text,\n      entities,\n      scheduledAt,\n      isSilent,\n      shouldUpdateStickerSetOrder,\n      attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      shouldGroupMessages: sendGrouped,\n    });\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform } },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(escapeHtml(requestedDraftText));\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={shouldSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            isButtonVisible={!activeVoiceRecording && !editingMessage}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={shouldSchedule}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList}\n          canScheduleUntilOnline={canScheduleUntilOnline}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!shouldSchedule ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n\n    return {\n      availableReactions: type === 'story' ? global.availableReactions : undefined,\n      topReactions: type === 'story' ? global.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      shouldSchedule: messageListType === 'scheduled',\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      groupChatMembers: chatFullInfo?.members,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      chatBotCommands: chatFullInfo?.botCommands,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n    };\n  },\n)(Composer));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          peer={chat}\n          withStory={withStory}\n          storyViewerOrigin={storyViewerOrigin}\n          storyViewerMode=\"single-peer\"\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import React from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  name: IconName;\n  className?: string;\n  style?: string;\n};\n\nconst Icon = ({\n  name,\n  className,\n  style,\n}: OwnProps) => {\n  return (\n    <i\n      className={buildClassName(`icon icon-${name}`, className)}\n      style={style}\n      aria-hidden\n    />\n  );\n};\n\nexport default Icon;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus, draftDate }) => {\n  const lang = useLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"n_u0sMwb5oen1kZQ0pTB\",\"input\":\"jehrl4eCR56s7i_qnPJr\",\"moreMenu\":\"NCIcjJKDloynKk14TiXg\",\"copy\":\"kiphUJhXSSQktqe2YGV_\",\"title\":\"teihdlkVODIhiAWnOJtr\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: link });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\",\"dots-animation\":\"ZWMMBxKD6WAeWLI27YOg\",\"dotsAnimation\":\"ZWMMBxKD6WAeWLI27YOg\",\"-7s\":\"UYRulRheGjTql4xAbURj\",\"7S\":\"UYRulRheGjTql4xAbURj\",\"-14s\":\"luaiQWxNoz8gYcb2XqSG\",\"14S\":\"luaiQWxNoz8gYcb2XqSG\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  className?: string;\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  className,\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName('Picker', className)}>\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName('picker-list', 'custom-scroll', isRoundCheckbox && 'withRoundedCheckbox')}\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qhFxTh5sx1oGuGccrzTb\",\"withBadge\":\"fltQkzCy9DRS9QWsAAH5\",\"badgeContainer\":\"ZGxYvTYQkAjpjvgBHMdH\",\"slide-in\":\"Ybb5P4BAFmSaffktaa81\",\"slideIn\":\"Ybb5P4BAFmSaffktaa81\",\"floating-badge-wrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"floatingBadgeWrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"rotate-in\":\"zyC6DJuexMszfxuDeBMR\",\"rotateIn\":\"zyC6DJuexMszfxuDeBMR\",\"floating-badge\":\"N8o73q2OT6d_kUTyUcg5\",\"floatingBadge\":\"N8o73q2OT6d_kUTyUcg5\",\"floating-badge-triangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floatingBadgeTriangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floating-badge-icon\":\"_qQItdFB5DScaFdSJR2a\",\"floatingBadgeIcon\":\"_qQItdFB5DScaFdSJR2a\",\"floating-badge-value\":\"h46zskGqCT1b3onjQB26\",\"floatingBadgeValue\":\"h46zskGqCT1b3onjQB26\",\"left\":\"OP8qshGP9fzy9bbMvWn2\",\"right\":\"EjQP1rE5iExOnGWJyYIe\",\"progress\":\"ASLJoYhAmOvHasjzMKYg\",\"fullProgress\":\"tmwWY_SiGqqKrC8oUUDW\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from './Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst PROGRESS_LOCK = 0.1;\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useLang();\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  const tailPosition = progress && (progress < PROGRESS_LOCK ? 0 : progress > 1 - PROGRESS_LOCK ? 1 : 0.5);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        isSavedMessages={isSavedMessages}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const peer = user || chat;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(peer, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n    emojiStatusSticker?: ApiSticker;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n  emojiStatusSticker,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport Icon from '../Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const wrappedMedia = useMemo(() => {\n    const replyMedia = replyInfo?.type === 'message' && replyInfo.replyMedia;\n    if (!replyMedia) return undefined;\n    return {\n      content: replyMedia,\n    };\n  }, [replyInfo]);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message || wrappedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : message?.forwardInfo?.hiddenUserName;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender?.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n      });\n    }\n\n    if (!message) {\n      return customText || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isChatSender = senderChat?.id === sender?.id;\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {!isChatSender && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && renderText(senderChatTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ypqi0benYTguShBFVcsL\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerPreviewHash(customEmoji.id) : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  useEffect(() => {\n    updateCanvas();\n  }, [emojiImage, lang.isRtl, customColor]);\n\n  const updateCanvasSize = useLastCallback((parentWidth: number, parentHeight: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = parentWidth * dpr;\n    canvas.height = parentHeight * dpr;\n\n    canvas.style.width = `${parentWidth}px`;\n    canvas.style.height = `${parentHeight}px`;\n\n    updateCanvas();\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  });\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  }, [dpr]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n  };\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageKey,\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CBuciapCXTFHGIT8QJjp\",\"particle\":\"zSAQoiw2P8dHog4GGC6Y\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"UoQ7Ahl_08BYJER7dkXg\",\"animated-icon\":\"m6I0yrKxFYZrVajqEjYY\",\"animatedIcon\":\"m6I0yrKxFYZrVajqEjYY\",\"effect\":\"DUYRztiKh76RsdbcJpu8\",\"animating\":\"_sWZKdctR4GWBAZk5LvT\",\"withEffectOnly\":\"bcQvAAQmccIErVUj7YDo\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { availableReactions, genericEmojiEffects } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum, isForumAsMessages } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { lastMessage } = chat;\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"root\":\"auVVCT950ajs6Uf4jI_w\",\"title\":\"RrIwnolHiQkojIfDEmg3\",\"info\":\"W7svz8CjmnPmDhwiz6cJ\",\"buttons\":\"lV9Uc02uJwQff0VQsKTj\",\"button\":\"D0dko7sVnw0KDtqjY0bH\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && draft && !isEmptyLocalReply && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport { getChatTitle, getMessageHtmlId, isChatChannel } from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: number;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti, checkGiftCode } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({});\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat!)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && <span className=\"action-message-content\">{renderContent()}</span>}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar\n          message={message}\n          renderContent={renderContent}\n        />\n      )}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread && isChannel && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vL8HfVVnjTeFmp1ECFj8\",\"compact\":\"N3E1geoPu1vesCKf545F\",\"image\":\"Fb4aIyDYEwOlaqY8oZkV\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: number;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u1iXUR7f9a1fJ3oKj6UR\",\"preview\":\"PdT0BgaOGO3KQ6uAMywg\",\"linkPreview\":\"VjvrVyctay2XnrWkF6Pm\",\"media\":\"bCVEWkiPlJ2vOFKdsOZn\",\"nonInteractive\":\"sM8Yb5GJn63Lqe7WGyxs\",\"expired\":\"GU6ftk8mOSKG68G3clJz\",\"expiredIcon\":\"C6JcJFH05QLPlgncYbFX\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(photo.isSpoiler);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={cn(\n        '&',\n        'custom',\n        chosen && 'chosen',\n        !noAppearAnimation && isReady && 'custom-animated',\n        noAppearAnimation && 'visible',\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\n\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={cn('&', chosen && 'chosen')}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={cn('static-icon')}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  canSendReaction, getReactionUniqueKey, isSameReaction, sortReactions,\n} from '../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 6;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const availableReactions = useMemo(() => {\n    const reactions = (enabledReactions?.type === 'some' && enabledReactions.allowed)\n      || allAvailableReactions?.map((reaction) => reaction.reaction);\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction: currentReaction }) => isSameReaction(reaction, currentReaction))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [allAvailableReactions, currentReactions, enabledReactions, isPrivate, maxUniqueReactions, topReactions]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {reactionsToRender.map((reaction, i) => (\n            'reaction' in reaction ? (\n              <ReactionSelectorReaction\n                key={getReactionUniqueKey(reaction.reaction)}\n                isReady={isReady}\n                onToggleReaction={onToggleReaction}\n                reaction={reaction}\n                noAppearAnimation={!canPlayAnimatedEmojis}\n                chosen={userReactionIndexes.has(i)}\n              />\n            ) : (\n              <ReactionSelectorCustomReaction\n                key={getReactionUniqueKey(reaction)}\n                isReady={isReady}\n                onToggleReaction={onToggleReaction}\n                reaction={reaction}\n                noAppearAnimation={!canPlayAnimatedEmojis}\n                chosen={userReactionIndexes.has(i)}\n                style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n              />\n            )\n          ))}\n          {withMoreButton && (\n            <Button\n              color=\"translucent\"\n              className={cn('show-more')}\n              onClick={handleShowMoreClick}\n            >\n              <i className=\"icon icon-down\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(video.isSpoiler);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  onMediaClick?: () => void;\n  onCancelMediaTransfer?: () => void;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  onMediaClick,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    type,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            {backgroundEmojiId && (\n              <EmojiIconBackground\n                emojiDocumentId={backgroundEmojiId}\n                className=\"WebPage--background-icons\"\n              />\n            )}\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n      return 'lng_view_button_boost';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          isToBottom ? 'end' : 'centerOrTop',\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"x62SJD7nuLUpIIlnJTv6\",\"header\":\"IjmUGHMAuPEVp35VsCgx\",\"title\":\"_dn8co5wdJt5b2UaxFfX\",\"caption\":\"ezmH45dow7OBiLlOipZt\",\"table\":\"g7t0KObI5uHkotdVoD9N\",\"tableCell\":\"Wi6tadyqvllR7l_pkcxR\",\"tableHeading\":\"NpALvYqpe5N2L1ddrYlS\",\"tableValue\":\"ypRrr0fjurHlSvEwWzcm\",\"tableSecondaryValue\":\"SXPAsM3uNS_a8KThhOt6\",\"value\":\"pcCb3zfdimbZ84SPtVhy\",\"negative\":\"WT9VmQr51xZyJy3_21rk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiPostStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active } } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    video.pause();\n    video.src = '';\n    video.load();\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"oWM0Zdb5uhUcOVtc99aS\",\"mediaArea\":\"qF5NAjzN826sfFvUwCi1\",\"preview\":\"dDrvIyufIoAgicpd5jBf\",\"shiny\":\"mHQ5t7g14fbpeDSyTLcd\",\"wave\":\"PlA2GEm5aGvfxsFwsAwE\",\"suggestedReaction\":\"K8z7QedYZHumSrLQCrZq\",\"dark\":\"cKzIdSabAL8MJ9G60u77\",\"background\":\"QxSGHD_yTaeyLhKS2qqz\",\"flipped\":\"CiCfsJ1VaeHZ624tudjv\",\"reaction\":\"Oi4FupikW1BQIPXxj9a7\",\"withCount\":\"dCSRvNsQTjKPeBul8iIX\",\"reactionCount\":\"WAKY7bjrmisH3k1XFQMZ\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal, focusMessage, closeStoryViewer } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost': {\n            const isShiny = isActive && (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat);\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        video.pause();\n        video.src = '';\n        video.load();\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nfunction useTimeout(callback: () => void, delay?: number, dependencies: readonly any[] = []) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [delay, savedCallback, ...dependencies]);\n}\n\nexport default useTimeout;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from '../global/helpers';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2OUAM1NNJzVPwPvfhkE\",\"fadeIn\":\"M0CnDOPqsqgp07DpRE7u\",\"closing\":\"U1ngPxxXOIuHX2rXUTdq\",\"peer\":\"N26JMlalq5jDriKQ7nFD\",\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"name_hasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"nameHasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"hidden\":\"c5X6suR_qxO1W64dH2j3\",\"contextMenu\":\"nAc8FkZyj9PHGgGm0BO7\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"root\":\"laLpjZnhOwW8cdBN3mEv\",\"avatar\":\"ewhbkm9F8nGqLpj_toQg\",\"avatarHidden\":\"aPEbisewADPmseTVcQxO\",\"ghost\":\"bVo8M4JDvB9c6gUvnHTE\",\"ghostAnimateName\":\"DuJzmNpO8VBweCzETZQJ\",\"ghostRevealName\":\"ghy_xXQVvFUwJrNg9uhA\",\"ghostLast\":\"_mqUJoir6gIYUJWb0zFw\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","AnimatedCounter","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","AudioOrigin","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","AvatarList","peers","root","avatar","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","ChatExtra","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadPeerStories","userId","usernames","phoneNumber","isSelf","chatUsernames","peerId","areNotificationsEnabled","setAreNotificationsEnabled","useEffectWithPrevDeps","prevPeerId","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","username","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","MAX_ASPECT_RATIO","FILE_EXT_REGEX","async","buildAttachment","filename","blob","options","blobUrl","URL","createObjectURL","type","mimeType","quick","shouldSendAsFile","SUPPORTED_IMAGE_CONTENT_TYPES","img","preloadImage","validateAspectRatio","shouldShrink","isGif","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","replace","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","err","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","coverUrl","url","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","toString","parseAudioMetadata","uniqueId","Date","now","random","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","shouldSendAsSpoiler","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","getAttachmentType","attachment","RE_COMMAND","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","innerHTML","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","name","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","handleDocumentSelect","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","disabled","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotCommandTooltip","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","sender","replyToPeerId","replyToMsgId","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","quoteText","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isReplyToTopicStart","action","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","innerClassName","getPeerColorClass","isShowingReply","leftIcon","customText","strippedMessage","strippedText","onContextMenu","Icon","EmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","WebPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","currentUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForumAsMessages","selectTopicFromMessage","availableReactions","topReactions","isOnActiveTab","isBlurred","editingMessage","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","shouldSchedule","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","groupChatMembers","members","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","chatBotCommands","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","stealthMode","stories","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","limit","shouldForce","isSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","editMessage","setEditingDraft","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","shouldGroupMessages","isLocalOnly","handleSendAttachments","handleSend","currentAttachments","record","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","escapeHtml","handleCustomEmojiSelect","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","onShowMore","isForMessage","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","mediaBlobUrl","getMessageVideo","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","MediaSpoiler","isVisible","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","Transition","activeKey","NothingFound","PasswordForm","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","Picker","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","PrivateChatInfo","Loading","fluid","withPeerColors","iconElement","titleText","LimitPreview","leftText","rightText","floatingBadgeText","floatingBadgeIcon","hasFloatingBadge","isProgressFull","tailPosition","userStatus","selectUserStatus","adminMember","customTitle","isOwner","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","connectionState","mediaViewer","currentTopicId","userFullInfo","emojiStatus","emojiStatusSticker","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","ProfileInfo","openPremiumModal","openStickerSet","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","stickerSetInfo","selectPreviousMedia","selectNextMedia","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","ReactionStaticEmoji","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","ReportModal","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","senderChat","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","wrappedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","emojiSize","isChatGroup","isChatSender","isReplyToQuote","renderSender","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","CustomEmojiEffect","particleSize","onEnded","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldLoop","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","noPlay","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","effect","ChatFolderModal","MuteChatModal","ChatBadge","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","renderContent","Archive","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","contextActions","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","handleDragEnter","minimized","buttonClassName","withPortalForMenu","info","Badge","avatarWrapper","chatsPreview","bySelector","Map","addCallback","selector","setter","ChatCallStatus","lastMessage","senderId","isOutgoing","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","Chat","folderId","orderDiff","animationType","offsetTop","openChat","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatList","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","digit","isArchiveInList","shift","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","useEnsureMessage","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","ActionMessageSuggestedAvatar","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","videoTs","videoSizes","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","checkGiftCode","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","shouldShowConfettiRef","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","nonInteractive","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","clearTimeout","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","isFile","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","count","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","Photo","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","getMessagePhoto","getMessageWebPagePhoto","withBlurredBackground","useBlurredMediaThumbRef","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","REACTION_SIZE","cn","createClassNameBuilder","ReactionSelectorCustomReaction","chosen","noAppearAnimation","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","enabledReactions","currentReactions","maxUniqueReactions","reactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","currentReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","getReactionUniqueKey","Video","canAutoPlay","getMessageWebPageVideo","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","isPlayerReady","markPlayerReady","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","handleTimeUpdate","isFinite","isWebPageVideo","calculateVideoDimensions","onTimeUpdate","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","period","schema","getSchemaByType","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","isRibbonShown","isArchivedRibbonShown","canShow","PREVIEW_AVATAR_COUNT","reverse","preloadPeerIds","animateClosing","animateOpening","withStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","index","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","byPeerId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","preloadProgressive","preloadHashes","peerStories","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","openMapModal","closeStoryViewer","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","geoPoint","geo","channelId","handleMediaAreaClick","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","trackType","handlers","onInit","shouldPlay","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","savedCallback","lastCallback","onBeforeUnload","ConnectorClass","channel","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","stopCurrentAudio","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","rgb2hex","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","force","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","zoom","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","Bold","Italic","INS","Underline","S","Strike","STRIKE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}